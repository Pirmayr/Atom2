(verbatim) "pushes list-item on top of stack"
(
  split drop
)
word

(prepend) "adds element to front of list"
(
  split 1 add join
)
word

(empty) "creates empty list"
(
  0 join
)
word

(split) "(list) -> items count"
(
  runtime () "Split" execute
)
word

(evaluate-and-split) "(list) -> (list) count"
(
  runtime () "EvaluateAndSplit" execute
)
word

(join) "items count -> (list)"
(
  runtime () "Join" execute
)
word

(splitHalve) "splits list into halves"
(
  split
  (itemsCount) put
  itemsCount 2 divide (itemsCount1) put
  itemsCount itemsCount1 subtract (itemsCount2) put
  itemsCount1 join (result1) put
  itemsCount2 join
  result1
)
word 

(:) "duplicates top of stack"
(
  duplicate
)
word

(.) "drops top of stack"
(
  drop
)
word

(getType) "gets type-object of object on top of stack"
(
  true () GetType
)
word

(void) "pushes void-type"
(
  Type ("System.Void") GetType
)
word

(isSubclassOf) "true, if type of object top of stack - 1 is subclass of type on top of stack, false otherwise"
(
  (object type) put
  object getType true type 1 join IsSubclassOf
)
word

(empty Count) (count) "object" "gets the Count-property of an object" define
(empty ToString) (toString) "object" "calls the ToString-function of an object" define
("new" execute) (new) "object" "creates an instance of a class" define
((length) put Array (Object length) CreateInstance) (newArray) "object" "creates an array" define

(0 0 equal) (true) "math" "the true-value" define
(0 0 notEqual) (false) "math" "the false-value" define
((false) (true) rotate if-else) (not) "math" "negates the truth-value on the top of stack" define

