(0) (default) set
(4) (instance) set
(8) (static) set
(512) (create-instance) set
(256) (invoke-method) set
(1024) (get-field) set

("mscorlib") {mscorlib-assembly}
("System.Windows.Forms") {forms-assembly}
("System.Numerics") {numerics-assembly}

(mscorlib-assembly "System.Object") (object-info) set
(mscorlib-assembly "System.Type") {type-info}
(mscorlib-assembly "System.Reflection.Assembly") (assembly-info) set
(mscorlib-assembly "System.Array") (array-info) set
(mscorlib-assembly "System.Collections") (collections-info) set

(instance invoke-method invoke) (invoke-instance-method) set
(static invoke-method invoke) (invoke-static-method) set

(0 object-info "GetType" invoke-instance-method) {object-get-type}
(object-get-type type-get-name) {object-get-type-name}
(0 object-info "ToString" invoke-instance-method) (to-string) set

(0 type-info "get_Assembly" invoke-instance-method) {type-get-assembly}
(0 type-info "get_FullName" invoke-instance-method) {type-get-qualified-name}
(0 type-info "get_Name" invoke-instance-method) {type-get-name}
(0 type-info "get_Namespace" invoke-instance-method) {type-get-namespace}
(0 type-info "GetMembers" invoke-instance-method) {type-get-members}
(type-get-assembly assembly-get-name assembly-name-get-name) {type-get-assembly-name}
(duplicate type-get-namespace "." add swap type-get-name add) {type-get-qualified-name-old}
(duplicate type-get-assembly-name swap type-get-qualified-name) {get-type-info}

(1 assembly-info "GetType" invoke-instance-method) (assembly-get-type) set
(0 assembly-info "GetName" invoke-instance-method) (assembly-get-name) set
(0 assembly-name-info "get_Name" invoke-instance-method) (assembly-name-get-name) set
(1 assembly-info "LoadWithPartialName" invoke-static-method) (assembly-load-with-partial-name) set
(swap assembly-load-with-partial-name swap assembly-get-type) (get-type) set
(mscorlib-assembly "System.Reflection.AssemblyName") (assembly-name-info) set

(target object-get-type-name "RuntimeType" equal) {target-is-runtime-type}
(name "new" equal) {name-is-create-instance-name}
(target (arguments) get evaluate-and-split target object-get-type get-type-info name instance invoke-method) {instance-call-arguments}
((arguments) get evaluate-and-split target get-type-info name static invoke-method) {static-call-arguments}
((arguments) get evaluate-and-split target get-type-info name instance create-instance) {create-instance-arguments}
((create-instance-arguments) (static-call-arguments) (name-is-create-instance-name) if-else) {create-instance-or-static-call-arguments}
<{target name arguments} (create-instance-or-static-call-arguments) (instance-call-arguments) (target-is-runtime-type) if-else invoke> {call}

(
  assembly-load-with-partial-name [GetTypes]
  (
    duplicate type-get-qualified-name ".Type" add 1 make-list set
  )
  map
)
(import) set


