((comment-dummy) set) (comment) set
(call) (right-bracket) set
(set) (right-brace) set

"flags for InvokeMember" comment
(512) (create-instance) set
(256) (invoke-method) set
(0) (default) set
(8) (static) set
(4) (instance) set
(1024) (get-field) set

"stack-manipulation" comment
({drop-1}) {drop}
((swap-1 swap-2) set (swap-2 swap-1) get) (swap) set
((duplicate-1) set (duplicate-1 duplicate-1) get) (duplicate) set
((over-1 over-2) set (over-1 over-2 over-1) get) (over) set
((rotate-1 rotate-2 rotate-3) set (rotate-2 rotate-3 rotate-1) get) (rotate) set 
(over swap) (duplicate-second) set

"miscellaneous words" comment
(duplicate-second set) (set-sticky) set
(duplicate show) (show-sticky) set
(1 add) (increment) set
(duplicate get increment swap set) (increment-word) set
(over get swap get add swap set) (increment-word-by-word) set
<{body key from to step} (from (key) get set body (from) (step) increment-word-by-word) (from to less-or-equal) while> {for}

"Object" comment
(mscorlib-assembly "System.Object") (object-info) set
(0 object-info "ToString" instance invoke-method invoke) (to-string) set
(0 object-info "GetType" instance invoke-method invoke) (object-get-type) set
(object-get-type type-get-name) (object-get-type-name) set

"assemblies" comment
(mscorlib) (mscorlib-assembly) set
("System.Windows.Forms") (forms-assembly) set

"Assembly" comment
(mscorlib-assembly "System.Reflection.Assembly") (assembly-info) set
("" instance create-instance invoke) (assembly-create) set
(1 assembly-info "LoadWithPartialName" static invoke-method invoke) (assembly-load-with-partial-name) set
(1 assembly-info "GetType" instance invoke-method invoke) (assembly-get-type) set
(0 assembly-info "GetName" instance invoke-method invoke) (assembly-get-name) set
(swap assembly-load-with-partial-name swap assembly-get-type) (get-type) set

"AssemblyName" comment
(mscorlib-assembly "System.Reflection.AssemblyName") (assembly-name-info) set
(0 assembly-name-info "get_Name" instance invoke-method invoke) (assembly-name-get-name) set

"Type" comment
(mscorlib-assembly "System.Type") (type-info) set
(0 type-info "get_Assembly" instance invoke-method invoke) (type-get-assembly) set
(0 type-info "get_Name" instance invoke-method invoke) (type-get-name) set
(0 type-info "get_Namespace" instance invoke-method invoke) (type-get-namespace) set
(type-get-assembly assembly-get-name assembly-name-get-name) (type-get-assembly-name) set
(duplicate type-get-namespace "." add swap type-get-name add) (type-get-qualified-name) set
({type} type type-get-assembly-name type type-get-qualified-name) (get-type-info) set

"if-else action" comment
<{if-block else-block condition} (else-block) (drop (if-block)) (condition) if evaluate> {if-else}

"call action" comment
((arguments) get split target get-type-info name static) (static-call-arguments) set
(target (arguments) get split target object-get-type {instance-type} instance-type get-type-info name instance) (instance-call-arguments) set
(target object-get-type-name RuntimeType equal) (target-is-runtime-type) set
<{target name arguments} (static-call-arguments) (instance-call-arguments) (target-is-runtime-type) if-else invoke-method invoke> {call}      

"Console" comment
("mscorlib" "System.Console") (console-info) set
(console-info "WriteLine" static invoke-method invoke) (show) set

"MessageBox" comment
(forms-assembly System.Windows.Forms.MessageBox get-type) {message-box-type}
<{value} message-box-type Show [value to-string] drop> {message}
(duplicate message) (trace) set

"FormBorderStyle" comment
(forms-assembly "System.Windows.Forms.FormBorderStyle") (form-border-style-info) set
(0 form-border-style-info "FixedSingle" static get-field invoke) (form-border-style-fixed-single) set

"Form" comment
("System.Windows.Forms.Form") (system-windows-forms-form-class) set
(forms-assembly system-windows-forms-form-class) (form-info) set
(forms-assembly system-windows-forms-form-class get-type) (system-windows-forms-form-type) set
(0 form-info "" instance create-instance invoke) (form-create) set
(0 form-info "Show" instance invoke-method invoke drop) (form-show) set
(1 form-info "set_FormBorderStyle" instance invoke-method invoke drop) (form-set-form-border-style) set

"Tests" comment
4711 {abc}
abc message
<abc trace message> (abc) 1 5 1 for
abc message

form-create Show []

"done" message
