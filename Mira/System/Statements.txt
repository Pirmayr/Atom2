((ifBlock elseBlock condition) put (elseBlock) get (drop (ifBlock) get) (condition) get if evaluate) (ifElse) set

(
  (body key from to step) put
  (
    (from) get (key) get set
    (body) get evaluate
    (from) get 1 add (from) put
  )
  ((from) get (to) get less-or-equal)
  while  
)
(for) set

(
  (body name) put empty GetEnumerator (enumerator) put
  (
    enumerator Current name put body evaluate
  )
  (enumerator MoveNext) while
)
(map) set

(
  (body name1 name2) put empty GetEnumerator (enumerator) put
  (
    enumerator Current name1 put
    enumerator MoveNext drop
    enumerator Current name2 put
    body evaluate
  )
  (enumerator MoveNext) while
)
(pairMap) set

(
  (value bodies) put
  (bodies) get () GetEnumerator
  (enumerator) put
  (
    (value) get (enumerator) get () Current evaluate
  )
  ((enumerator) get () MoveNext)
  while
)
(apply) set

(
  (from to step) put
  empty
  (
    from add from step add (from) put
  )
  (from to less-or-equal)
  while  
)
(range) set

(
  (condition name) put empty GetEnumerator (enumerator) put
  true (result) put
  (
    enumerator Current name put condition evaluate (result) put
  )
  (result enumerator MoveNext and) while
  result
)
(all) set

(
  (condition name) put empty GetEnumerator (enumerator) put
  false (result) put
  (
    enumerator Current name put condition evaluate (result) put 
  )
  (result not enumerator MoveNext and) while
  result
)
(any) set

(
  (value body) put body (case (selector toString value toString equal) if) (selector) (case) pairMap
)
(switch) set

(
  (value body) put body (case selector if) (selector) (case) pairMap
)
(select) set

((arguments code) put arguments evaluateAndSplit join (evaluate) verbatim arguments (put) verbatim code split 4 add join) (lambda) set
